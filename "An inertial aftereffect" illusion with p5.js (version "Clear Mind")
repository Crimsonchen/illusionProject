let circleX, circleY; // 圆点位置
let circleSize = 50; // 圆点直径
let rectangles = []; // 保存当前光线的矩形数据
let rectWidth = 10; // 光线的固定宽度
let numRectangles = 15; // 光线的数量

function setup() {
  createCanvas(600, 600);
  circleX = width / 2;
  circleY = height / 2;

  // 初始化矩形
  generateRectangles();
  frameRate(2); // 每秒渲染两次，间隔0.5秒
}

function draw() {
  background(240); // 清屏并重绘背景

  // 绘制圆点
  noStroke();
  fill(100);
  ellipse(circleX, circleY, circleSize);

  // 绘制光线
  for (let r of rectangles) {
    drawRectangle(r);
  }

  // 每0.5秒更新光线
  generateRectangles();
}

// 生成新的光线
function generateRectangles() {
  rectangles = []; // 清空旧的光线
  for (let i = 0; i < numRectangles; i++) {
    const angle = random(TWO_PI); // 随机角度
    const startDistance = circleSize / 2 + 5; // 靠近圆点的一端
    const endDistance = random(startDistance + 30, 250); // 远离圆点的一端
    rectangles.push({
      angle: angle,
      startDistance: startDistance,
      endDistance: endDistance
    });
  }
}

// 绘制光线（矩形）
function drawRectangle(r) {
  const startX = circleX + cos(r.angle) * r.startDistance;
  const startY = circleY + sin(r.angle) * r.startDistance;
  const endX = circleX + cos(r.angle) * r.endDistance;
  const endY = circleY + sin(r.angle) * r.endDistance;
  
  const dirX = endX - startX;
  const dirY = endY - startY;
  const length = dist(startX, startY, endX, endY); // 矩形长度

  push();
  translate(startX, startY); // 将起点作为矩形的基点
  rotate(atan2(dirY, dirX)); // 矩形沿着方向旋转
  fill(0); // 黑色光线
  rect(0, -rectWidth / 2, length, rectWidth); // 绘制矩形
  pop();
}
